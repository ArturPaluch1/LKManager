



spring.mail.host: smtp.poczta.onet.pl
spring.mail.port: 465 #465

protocol: smtps
spring.mail.username: ${email-email}
spring.mail.password: ${email-password}
spring.mail.properties.mail.smtp.auth: true
spring.mail.properties.mail.smtp.starttls.enable: false
spring.mail.properties.mail.smtp.starttls.required: false
spring.mail.properties.mail.debug: true
  
  
  
  spring.logging.level.org.springframework.security=DEBUG
  spring.logging.level.org.hibernate.SQL=DEBUG
  spring.logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE








spring.application.server: ${applicationServer}
spring.application.email: ${email-email}

mailjet:
  api-key: ${mailjetApiKey}
  apiSecretKey: ${mailjetSecretKey}

encrypt:
  AES_SECRET_KEY: ${AES_SECRET_KEY}
  AES_INIT_VECTOR: ${AES_INIT_VECTOR}

  #   host: smtp.office365.com

  #   host: smtp-mail.outlook.com
  # host: smtp.interia.pl
spring:
  mail:
    properties:
      mail:
        smtp:
          auth:
            mechanisms: LOGIN
          ssl:
            enable: true
  # Redis | Redis |   Redis |   Redis |   Redis |   Redis |   Redis |   Redis |   Redis |   Redis |   Redis |   Redis |   Redis |   Redis |   Redis |
  redis:
    url: ${redisLocalhost_Url}
    # Redis | Redis |   Redis |   Redis |   Redis |   Redis |   Redis |   Redis |   Redis |   Redis |   Redis |   Redis |   Redis |   Redis |   Redis |

# SQL Database | SQL Database |  SQL Database |  SQL Database |  SQL Database |  SQL Database |  SQL Database |  SQL Database |  SQL Database |  SQL Database |  SQL Database |  SQL Database |  SQL Database






     # mail.smtp.ssl.trust: smtp.interia.pl
    #  mail.smtp.ssl.trust: smtp.office365.com



    #   mail:
   #     debug: true
   #     smtp:
   #       auth: true
   #       starttls:
   #         enable: true
    #        required: true


  config:
    import: optional:file:.env[.properties]
  spring.jpa.show-sql: true

  datasource:


  #dbUrl1=jdbc:mysql://localhost:3306/LKM_prod
  #  url: jdbc:sqlserver://LOCALHOST:1433;encrypt=true;trustServerCertificate=true;

  #glowne testy==============================================================
  #  url: jdbc:sqlserver://localhost:1433;databaseName=ligaklanowmz_tests;trustServerCertificate=true;
    #glowne testy==============================================================



  #  url: jdbc:sqlserver://localhost:1433;databaseName=ligaklanowmz_local;trustServerCertificate=true;
    url: jdbc:sqlserver://localhost:1433;databaseName=ligaklanowmz_tests;trustServerCertificate=true;
 #\/tu jest backup prod
  #  url: jdbc:sqlserver://localhost:1433;databaseName=testimport;trustServerCertificate=true;
    username: ligaklanowmz_
    password: ligaklanowmz_


 #   url: jdbc:sqlserver://localhost\SQLEXPRESS;encrypt=true;trustServerCertificate=true;
  #  databaseName: ${databaseName-freeasphosting}
  #  username: ${dbUsername-freeasphosting}
  #  password: ${dbPassword-freeasphosting}

  jpa:
    hibernate:
      ddl-auto: validate
  #  database-platform: org.hibernate.dialect.SQLServerDialect
    database-platform: org.hibernate.dialect.SQLServer2012Dialect
    database: sql_server
    show-sql: true
    logging.level.org.hibernate.SQL : DEBUG
    logging.level.org.springframework.web: DEBUG



    properties:
      hibernate:
        id.new_generator_mappings: true
        current_session_context_class: org.springframework.orm.hibernate5.SpringSessionContext


    #jpa:
    # hibernate:
    #   ddl-auto: validate
    #  database-platform: org.hibernate.dialect.MySQL5InnoDBDialect

    #  database: mysql
    # show-sql: true
    #  logging.level.org.hibernate.SQL : DEBUG
    #  logging.level.org.springframework.web: DEBUG





    #org:
    # hibernate:
    #  dialect:
    #   MySQLDialect:
# SQL Database | SQL Database |  SQL Database |  SQL Database |  SQL Database |  SQL Database |  SQL Database |  SQL Database |  SQL Database |  SQL Database |  SQL Database |  SQL Database |  SQL Database






